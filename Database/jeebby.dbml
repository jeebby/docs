Project Jeebby {
    database_type: 'MariaDB'
    Note: '''
        ## Jeebby database
        Jeebby database use the structure of Laravel/Jetstream with Teams.
        This base is sufficient enough for this project. This database documentation is 
        divided in four categories: laravel/jetstream, jeebby, storage and monitor.
        Red colors are tables from Laravel, blue tables are from Jetstream, green are from Jeebby/API and purple tables are mixed origins.

        ### Laravel/jetstream
        These tables are from the laravel/jetstream framework.

        ### Jeebby
        These tables belong to the Jeebby platform.

        ### Storage
        Tables for the Storage API.

        ### Monitor
        Tables for the Monitor API.
    '''
}

TableGroup "Laravel Jetstream"
{
    failed_jobs
    migrations
    password_reset_tokens
    personal_access_tokens
    sessions
    teams
    team_invitations
    team_user
    users
}

TableGroup "Jeebby"
{
    flows
    flow_types
    flow_type_fields
    installations
    team_flow_type
    team_flow_type_fields
    flow_parameters
    installation_parameters
}

TableGroup "Storage"
{
    flow_storage_fields
    storage_values
}

TableGroup "Monitor"
{
    installation_statusses
}

Table failed_jobs [headercolor: #be4d25]
{
    id "bigint unsigned" [increment]
    uuid varchar(255)
    connection text
    queue text
    payload longtext
    exception longtext
    failed_at timestamp [default: `current_timestamp()`]

    Indexes
    {
        id [pk]
        uuid [name: 'failed_jobs_uuid_unique', unique]
    }
}

Table migrations [headercolor: #be4d25]
{
    id "int unsigned" [increment]
    migration varchar(255)
    batch int

    Indexes
    {
        id [pk]
    }
}

Table password_reset_tokens [headercolor: #be4d25]
{
    email varchar(255)
    token varchar(255)
    created_at timestamp

    Indexes
    {
        email [pk]
    }
}

Table personal_access_tokens [headercolor: #be4d25]
{
    id "bignint unsigned" [pk, increment]
    tokenable_type varchar(255)
    tokenable_id "bigint unsigned"
    name varchar(255)
    token varchar(64)
    abilities text [null]
    last_used_at timestamp [null]
    expires_at timestamp [null]
    created_at timestamp [null]
    updated_at timestamp [null]

    Indexes
    {
        id [pk]
        token [name: 'personal_access_tokens_token_unique', unique]
        (tokenable_type, tokenable_id) [name: 'personal_access_tokens_tokenable_type_tokenable_id_index']
    }
}

Table sessions [headercolor: #087f23]
{
    id varchar(255)
    user_id "bigint unsigned"
    ip_address varchar(45)
    user_agent text
    payload longtext
    last_activity int

    Indexes
    {
        id [pk]
        user_id [name: 'sessions_user_id_index']
        last_activity [name: 'sessions_last_activity_index']
    }
}

Table teams [headercolor: #9925be]
{
    id "bigint unsigned" [increment]
    user_id "bigint unsigned"
    name varchar(255)
    personal_team tinyint(1)
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Indexes
    {
        id [pk]
        user_id [name: 'teams_user_id_index']
    }
}

Table team_invitations [headercolor: #087f23]
{
    id "bigint unsigned" [increment]
    team_id "bigint unsigned" [ref: > teams.id]
    email varchar(255)
    role varchar(255) [null]
    created_at timestamp [null]
    updated_at timestamp [null]

    Indexes
    {
        id [pk]
        (team_id, email) [name: 'team_invitations_team_id_email_unique', unique]
    }
}

Table team_user [headercolor: #087f23]
{
    id "bigint unsigned" [increment]
    team_id "bigint unsigned"
    user_id "bigint unsigned"
    role varchar(255) [null]
    created_at timestamp [null]
    updated_at timestamp [null]

    Note: 'This is the table that belongs to the Membership model from Jetstream.'

    Indexes
    {
        id [pk]
        (team_id, user_id) [name: 'team_user_team_id_user_id_unique', unique]
    }
}

Table users [headercolor: #9925be]
{
    id "bigint unsigned" [increment]
    name varchar(255)
    email varchar(255)
    email_verified_at timestamp [null]
    password varchar(255)
    two_factor_secret text [null]
    two_factor_recovery_codes text [null]
    two_factor_confirmed_at timestamp [null]
    remember_token varchar(100) [null]
    current_team_id "bigint unsigned" [null]
    profile_photo_path varhcar(2048) [null]
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]
    jeebby_system tinyint(1) [default: 0, Note: 'Determin if this user is a Jebby system user.']

    Note: '''
    ### Jeebby system user
    If `jeebby_system` is 1, then the name is **Jeebby $rand(6)** and email is **jeebby_$rand(6)@inter.al
    The user is joined to a team and is assigned the role **Jeebby API**. 
    An access token is generated with the API permissions.
    This access token is then used for the flows to write/read to the Jeebby API from Node-RED.
    These are the Output and Storage API nodes.
    '''

    Indexes
    {
        id [pk]
        (email) [name: 'users_email_unique', unique]
    }
}

Table flows [headercolor: #49be25]
{
    id uuid
    name varchar(30)
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Indexes
    {
        id [pk]
        name [name: 'flows_name_unique', unique]
    }
}

Table flow_types [headercolor: #49be25]
{
    id uuid
    flow_id uuid [ref: > flows.id, null]
    name varchar(30)
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    note: '''
    Node-RED flows uses config types. Here are the definitions and the fields are defined in flow_type_fields.
    In the jeebby_type_values the team can store the values for other flows that uses the same config type.
    Types that are shared, don't belong to a specific flow.
    '''

    Indexes
    {
        id [pk]
        (flow_id, name) [name: 'flow_types_flow_id_name_unique', unique]
    }
}

Table flow_type_fields [headercolor: #49be25]
{
    id int [increment]
    flow_type_id uuid [ref: > flow_types.id]
    name varchar(30)
    type "tinyint unsigned"
    is_required boolean [default: true]
    is_secret boolean
    config_flow_type_id uuid [ref: > flow_types.id, null, note: 'When type is config then this field reference to the flow_type id']
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Note: '''
    Types are:
      - text
      - int
      - decimal
      - date
      - time
      - datetime
      - boolean
      - config
    '''

    Indexes
    {
        id [pk]
        (flow_type_id, name) [name: 'flow_type_fields_flow_type_id_name_unique', unique]
    }
}

Table installations [headercolor: #49be25]
{
    id uuid
    flow_id uuid [ref: > flows.id]
    team_id "bigint unsigned" [ref: > teams.id]
    created_at timestamp [null]
    updated_at timestamp [null]

    Indexes
    {
        id [pk]
    }
}

Table flow_storage_fields [headercolor: #49be25]
{
    id int [increment]
    flow_id uuid [ref: > flows.id]
    name varchar(30) [note: 'name of the field']
    type "tinyint unsigned"
    input boolean [default: false, note: 'This field is written to from the flow.']
    output boolean [default: false, note: 'This field is read by the flow.']
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Note: '''
    Types are:
      - text
      - int
      - decimal
      - date
      - time
      - datetime
      - boolean
      - json
      - array
    '''

    Indexes
    {
        id [pk]
        (flow_id, name) [name: 'flow_storage_fields_flow_id_name_unique', unique]
    }
}

Table team_flow_type [headercolor: #49be25]
{
    id uuid
    team_id int [ref: > teams.id]
    flow_type_id uuid [ref: > flow_types.id]
    name varchar(30) [note: 'Is the identifier for the flow type for this team.']
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Indexes
    {
        id [pk]
        (team_id, flow_type_id, name) [name: 'jeebby_type_values_team_id_flow_type_id_name_unique', unique]
    }
}

Table team_flow_type_fields [headercolor: #49be25]
{
    id int [increment]
    team_flow_type uuid [ref: > team_flow_type.id]
    flow_type_field_id id [ref: > flow_type_fields.id]
    value varchar(100)
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Indexes
    {
        id [pk]
        (team_flow_type, flow_type_field_id) [name: 'team_flow_type_fields_unique', unique]
    }
}

Table flow_parameters [headercolor: #49be25]
{
    id uuid
    flow_id uuid [ref: > flows.id]
    name varchar(30)
    type "tinyint unsigned"
    is_required boolean
    is_secret boolean
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Note: '''
    Types are:
      - text
      - int
      - decimal
      - date
      - time
      - datetime
      - boolean
      - config
    '''

    Indexes
    {
        id [pk]
        (flow_id, name) [name: 'flow_parameters_flow_id_name_unique', unique]
    }
}

Table installation_parameters [headercolor: #49be25]
{
    id int [increment]
    flow_parameter_id uuid [ref: > flow_parameters.id]
    team_id int [ref: > teams.id]
    value varchar(100)
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Indexes
    {
        id [pk]
        (flow_parameter_id, team_id) [name: 'installation_parameters_parameter_id_team_id_unique', unique]
    }
}

Table storage_values [headercolor: #49be25]
{
    id int [increment]
    installation_id uuid [ref: > installations.id]
    flow_storage_field_id int [ref: > flow_storage_fields.id]
    value varchar(100)
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Indexes
    {
        id [pk]
    }
}

Table installation_statusses [headercolor: #49be25]
{
    id int [increment]
    installation_id uuid [ref: > installations.id]
    status "tinyint unsigned" [note: '0 = not_running, 1 = running, 2 = error, 3 = installing, 4 = warning (for example a limit is almost reached)']
    message varchar(255)
    created_at timestamp [null]
    updated_at timestamp [null]
    deleted_at timestamp [null]

    Indexes
    {
        id [pk]
    }
}